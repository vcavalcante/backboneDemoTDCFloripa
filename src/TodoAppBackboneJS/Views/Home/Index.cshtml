<!DOCTYPE html>
<html lang="en">
<head>
    <title></title>
    <style>
        .done {
            text-decoration: line-through;

        }
    </style>
    <script src="~/Scripts/jquery-1.7.2.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Scripts/backbone.js"></script>
    <script type="text/javascript">
        $(function() {
            App.start();

        });
        var App = {
            Models: {},
            Collections: {},
            Views: {},
            start: function () {
                App.Router = new App.Router();
                Backbone.history.start();
            }
        };

        App.Models.Todo = Backbone.Model.extend({
            defaults: {
                "status":"incomplete"
            },
            toggleStatus: function () {

                if (this.get('status') === 'incomplete') {
                    this.set('status', 'complete');
                } else {
                    this.set('status', 'incomplete');
                }
                this.save();
            }
        });
        App.Collections.Todo = Backbone.Collection.extend({
            model: App.Models.Todo,
            url:"/api/todo"
        });

        App.Views.Todo = Backbone.View.extend({
            tagName: "li",
            events: { "change input": "toggle" },
            toggle:function() {
                this.model.toggleStatus();
            },
            template: _.template("<label class=' <% if(status=='complete') print('done') %>'> <input type='checkbox'  <% if(status=='complete') print('checked') %> /> <%=description%> </label>"),
            render:function() {
                this.$el.append(this.template(this.model.toJSON()));
                return this.$el;
            }
        });

        App.Views.Todos = Backbone.View.extend({
            initialize:function() {
                this.listenTo(this.collection, "add", this.addOne, this);
                this.listenTo(this.collection, "reset", this.render, this);
                this.listenTo(this.collection, "sync", this.render, this);
            },
            tagName: "ul",
            render:function() {
                this.$el.empty();
                this.collection.forEach(this.addOne, this);
                return this;
            },
            addOne:function(todo) {
                var todoView = new App.Views.Todo({ model: todo });
                this.$el.append(todoView.render());
            }
        });

        App.Router = Backbone.Router.extend({
            initialize:function() {
                App.Collections.todos = new App.Collections.Todo({ model: App.Models.Todo });
                App.Views.todos = new App.Views.Todos({ el: $("#app ul"), collection: App.Collections.todos });
                App.Collections.todos.fetch();
            },
            routes: {
                "":"index",
                "all": "all",
                "done": "done",
                "todo":"todo"
            },

            index: function () {
                //$("#app").html("<h1>index</h1>");
            },
            all:function() {
                //$("#app").html("<h1>All</h1>");
            },

            done: function () {
                //$("#app").html("<h1>Done</h1>");
            },

            todo: function () {
                //$("#app").html("<h1>todo</h1>");
            },
        });

    </script>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
</head>
    <body>
        <div class="container">
            <div class="row">
                <div class="well" id="app">
                    <ul>
                        
                    </ul>
                </div>
            </div>
        </div>

    </body>
</html>
